{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Controls","props","id","onClick","val","Display","t","tLeft","timeLeft","Math","floor","slice","seconds","App","state","break","session","currentCd","running","handleClick","bind","this","setState","timer","alarm","document","querySelector","play","pause","timerID","setInterval","updateTime","clearInterval","renderControls","renderTimer","preload","src","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9785957.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\n\nfunction Controls(props) {\n  return (\n    <button id={props.id} onClick={props.onClick}>\n      {props.val}\n    </button>\n  );\n}\nfunction Display(props) {\n  const tLeft = props.timeLeft;\n  let minutes = (t) => {\n    return (\"0\" + Math.floor(t / 60)).slice(-2);\n  };\n  let seconds = (t) => {\n    return (\"0\" + (t % 60)).slice(-2);\n  };\n\n  return <div> {minutes(tLeft) + \":\" + seconds(tLeft)}</div>;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      break: 5,\n      session: 25,\n      currentCd: \"Session\",\n      timeLeft: 1500,\n      running: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  renderControls(id, val) {\n    return <Controls id={id} val={val} onClick={() => this.handleClick(id)} />;\n  }\n\n  handleClick(id) {\n    switch (true) {\n      case id === \"break-decrement\" && this.state.break > 1 && !this.state.running:\n        this.setState({ break: this.state.break - 1 });\n        break;\n      case id === \"break-increment\" && this.state.break < 60 && !this.state.running:\n        this.setState({ break: this.state.break + 1 });\n        break;\n      case id === \"session-decrement\" && this.state.session > 1 && !this.state.running:\n        this.setState({ session: this.state.session - 1 });\n        this.setState((state) => ({ timeLeft: state.session * 60 }));\n        break;\n      case id === \"session-increment\" && this.state.session < 60 && !this.state.running:\n        this.setState({ session: this.state.session + 1 });\n        this.setState((state) => ({ timeLeft: state.session * 60 }));\n        break;\n      case id === \"start_stop\":\n        this.state.running\n          ? this.setState({ running: false }, () => this.timer())\n          : this.setState({ running: true }, () => this.timer());\n        break;\n      case id === \"reset\":\n        this.setState({ timeLeft: 1500, break: 5, session: 25, running: false, currentCd: \"Session\" }, () => {\n          this.timer();\n          this.alarm();\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  alarm() {\n    let alarm = document.querySelector(\"audio\");\n    this.state.running === true ? alarm.play() : alarm.pause();\n  }\n  timer() {\n    if (this.state.running) {\n      this.timerID = setInterval(() => this.updateTime(), 1000);\n    } else {\n      clearInterval(this.timerID);\n    }\n  }\n\n  updateTime() {\n    switch (true) {\n      case this.state.timeLeft > 0:\n        this.setState({ timeLeft: this.state.timeLeft - 1 });\n        break;\n      case this.state.timeLeft === 0 && this.state.currentCd === \"Session\":\n        this.setState({ currentCd: \"Break\", timeLeft: this.state.break * 60 });\n        break;\n      case this.state.timeLeft === 0 && this.state.currentCd === \"Break\":\n        this.alarm();\n        this.setState({ currentCd: \"Session\", timeLeft: this.state.session * 60 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  renderTimer() {\n    return <Display timeLeft={this.state.timeLeft} />;\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>25+5 Clock</h1>\n        <div>\n          <h2 id=\"break-label\">Break length</h2>\n          {this.renderControls(\"break-decrement\", \"-\")}\n          <div id=\"break-length\">{this.state.break}</div>\n          {this.renderControls(\"break-increment\", \"+\")}\n        </div>\n        <div>\n          <h2 id=\"session-label\">Session length</h2>\n          {this.renderControls(\"session-decrement\", \"-\")}\n          <div id=\"session-length\">{this.state.session}</div>\n          {this.renderControls(\"session-increment\", \"+\")}\n        </div>\n        <div>\n          <h2 id=\"timer-label\">{this.state.currentCd}</h2>\n          <div id=\"time-left\">{this.renderTimer()}</div>\n          <audio\n            id=\"beep\"\n            preload=\"auto\"\n            src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n          ></audio>\n        </div>\n        <div>\n          {this.renderControls(\"start_stop\", \"play\")}\n          {this.renderControls(\"reset\", \"reset\")}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}